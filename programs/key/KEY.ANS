Test date: 02/09/23  19:11:22 
The number of times you used the grading program is 14 
In the business world, your customer replaces the grading program. 
The goal is a correct program with the fewest grading attempts. 
Key Grading System Version 4.1
Student: Last=Qizheng              First=Jin                  Type=Individual          
Grading and testing history log
       User Test.    Date: 02/01/23  20:44:39  keyboard     test         
       User Test.    Date: 02/01/23  20:45:59  keyboard     test         
       User Test.    Date: 02/02/23  13:46:51  keyboard     test         
       User Test.    Date: 02/02/23  13:47:01  keyboard     test         
   *** Grading Run.  Date: 02/02/23  13:47:59 
       User Test.    Date: 02/02/23  13:59:08  keyboard     test         
       User Test.    Date: 02/02/23  13:59:20  keyboard     test         
       User Test.    Date: 02/02/23  14:05:06  keyboard     test         
       User Test.    Date: 02/02/23  14:13:18  keyboard     test         
       User Test.    Date: 02/02/23  14:16:18  keyboard     test         
   *** Grading Run.  Date: 02/02/23  14:16:57 
       User Test.    Date: 02/02/23  14:18:51  keyboard     test         
       User Test.    Date: 02/02/23  14:25:02  keyboard     test         
       User Test.    Date: 02/02/23  14:25:43  keyboard     test         
       User Test.    Date: 02/02/23  14:26:42  keyboard     test         
       User Test.    Date: 02/02/23  14:27:19  keyboard     test         
       User Test.    Date: 02/02/23  17:16:54  keyboard     test         
       User Test.    Date: 02/02/23  17:18:22  keyboard     test         
       User Test.    Date: 02/02/23  17:29:24  keyboard     test         
       User Test.    Date: 02/02/23  17:31:19  keyboard     test         
       User Test.    Date: 02/02/23  17:33:44  keyboard     test         
       User Test.    Date: 02/07/23  17:11:55  keyboard     test         
       User Test.    Date: 02/07/23  17:12:15  keyboard     test         
       User Test.    Date: 02/07/23  17:13:22  keyboard     test         
       User Test.    Date: 02/07/23  17:15:01  keyboard     test         
       User Test.    Date: 02/07/23  17:15:18  keyboard     test         
       User Test.    Date: 02/07/23  17:18:01  keyboard     test         
       User Test.    Date: 02/07/23  17:25:57  keyboard     test         
       User Test.    Date: 02/07/23  17:26:08  keyboard     test         
       User Test.    Date: 02/07/23  17:27:07  keyboard     test         
   *** Grading Run.  Date: 02/07/23  17:27:26 
       User Test.    Date: 02/07/23  17:28:33  keyboard     test         
       User Test.    Date: 02/07/23  17:32:18  keyboard     test         
   *** Grading Run.  Date: 02/07/23  17:32:30 
       User Test.    Date: 02/07/23  17:32:45  keyboard     test         
       User Test.    Date: 02/07/23  17:45:56  keyboard     test         
       User Test.    Date: 02/07/23  17:55:00  keyboard     test         
       User Test.    Date: 02/07/23  17:55:28  keyboard     test         
       User Test.    Date: 02/07/23  17:55:52  keyboard     test         
       User Test.    Date: 02/07/23  17:56:23  keyboard     test         
       User Test.    Date: 02/07/23  17:57:04  keyboard     test         
       User Test.    Date: 02/07/23  18:41:17  keyboard     test         
       User Test.    Date: 02/07/23  18:55:55  keyboard     test         
   *** Grading Run.  Date: 02/07/23  18:56:13 
       User Test.    Date: 02/07/23  18:59:01  keyboard     test         
       User Test.    Date: 02/07/23  19:11:38  keyboard     test         
       User Test.    Date: 02/07/23  19:13:30  keyboard     test         
       User Test.    Date: 02/07/23  19:13:45  keyboard     test         
       User Test.    Date: 02/07/23  19:25:44  keyboard     test         
       User Test.    Date: 02/07/23  19:25:58  keyboard     test         
       User Test.    Date: 02/07/23  19:26:07  keyboard     test         
       User Test.    Date: 02/07/23  19:27:53  keyboard     test         
       User Test.    Date: 02/07/23  19:28:07  keyboard     test         
       User Test.    Date: 02/08/23  11:06:16  keyboard     test         
       User Test.    Date: 02/08/23  11:06:51  keyboard     test         
   *** Grading Run.  Date: 02/08/23  11:07:13 
       User Test.    Date: 02/08/23  11:07:37  keyboard     test         
       User Test.    Date: 02/08/23  11:07:54  keyboard     test         
       User Test.    Date: 02/09/23  16:37:16  keyboard     test         
       User Test.    Date: 02/09/23  16:58:19  keyboard     test         
       User Test.    Date: 02/09/23  16:59:25  keyboard     test         
       User Test.    Date: 02/09/23  17:00:35  keyboard     test         
       User Test.    Date: 02/09/23  17:00:49  keyboard     test         
       User Test.    Date: 02/09/23  17:13:42  keyboard     test         
       User Test.    Date: 02/09/23  17:22:31  keyboard     test         
       User Test.    Date: 02/09/23  17:48:41  keyboard     test         
       User Test.    Date: 02/09/23  17:49:03  keyboard     test         
       User Test.    Date: 02/09/23  17:49:30  keyboard     test         
       User Test.    Date: 02/09/23  17:49:50  keyboard     test         
   *** Grading Run.  Date: 02/09/23  18:50:18 
       User Test.    Date: 02/09/23  18:52:46  keyboard     test         
       User Test.    Date: 02/09/23  18:52:51  keyboard     test         
   *** Grading Run.  Date: 02/09/23  18:52:53 
       User Test.    Date: 02/09/23  18:53:55  keyboard     test         
       User Test.    Date: 02/09/23  18:53:56  keyboard     test         
       User Test.    Date: 02/09/23  18:53:57  keyboard     test         
   *** Grading Run.  Date: 02/09/23  18:54:00 
       User Test.    Date: 02/09/23  19:00:46  keyboard     test         
   *** Grading Run.  Date: 02/09/23  19:00:51 
       User Test.    Date: 02/09/23  19:03:33  keyboard     test         
       User Test.    Date: 02/09/23  19:03:34  keyboard     test         
   *** Grading Run.  Date: 02/09/23  19:03:36 
       User Test.    Date: 02/09/23  19:04:01  keyboard     test         
       User Test.    Date: 02/09/23  19:04:04  keyboard     test         
   *** Grading Run.  Date: 02/09/23  19:04:06 
       User Test.    Date: 02/09/23  19:11:04  keyboard     test         
       User Test.    Date: 02/09/23  19:11:05  keyboard     test         
   *** Grading Run.  Date: 02/09/23  19:11:09 
       User Test.    Date: 02/09/23  19:11:16  keyboard     test         
       User Test.    Date: 02/09/23  19:11:20  keyboard     test         
   *** Grading Run.  Date: 02/09/23  19:11:22 
Running test
Test ran correctly.
++ Grade ++   60 = Points earned for correct answers.

-> A major reason for programming in assembler is to maximize efficiency.
This can be instructions written and/or instructions executed.
Please read the section in the class notes titled Code Complexity.

We are now analyzing your source code. You will be graded on
the number of instructions you wrote to solve this problem.
The target for the number of executable instructions written is:
20 points for   0 -  20  
15 points for  21 -  22  
10 points for  23 -  24 
05 points for  25 -  26 
00 points for  27+      
Your actual counts are:
Lines .......  30    Comments ...   3    Labels .......   1   
Directives ..  11    Variables ..   2    Executables ..  13    McCabe ..   2 
++ Grade ++   20 = Points earned for code written efficiency.  

The McCabe number for your KEY.ASM is 2 which is considered 
fine for the KEY assignment and indicates reasonable program structure.

-> Analyzing program documentation. 
The heuristic algorithms used may have problems with your specific code. 
Contact the instructor if you detect a problem with your grade. 
DOCPH-0001 The program header is not adequate, -10 points.        
           Every program needs an descriptive program header.     
           See the Program Documentation Requirements on the WEB. 
DOCHB-0.00 Use of code blocks headers is not adequate, -10 points.     
           Programs must be broken into small functional blocks of code.     
           Each block must have a header that describes the code's function. 
           See the Program Documentation Requirements on the WEB.            
DOCLC-0.67 Use of line comments is not adequate, -10 points.                       
           Virtually all lines of executable code need a meaningful comment. 
           See the Program Documentation Requirements on the WEB.                   
++ Grade ++    0 = Points earned for correct documentation.    

-> Calculating the total grade for the program.                  
This grade is subject to adjustment by the instructor.           
This grade will be reduced by any late submission penalty.       
++ Grade ++   80 = Total grade generated by the Grading System.  

-> Statistics on testing and grading                             
    77  = Number of user tests.                                  
    14  = Number of grading runs to get the program working.     
     0  = Number of grading runs to improve efficiency or documentation. 

+- atyC<6&}xC86&k~C6&juiC6&zuzC>6&Zkyz&jgzk@&6856?589&&7?@77@88&

Building the file key.ans for electronic submission...
;---------------------------------------
         .model     small              ;64k code and 64k data
         .8086                         ;only allow 8086 instructions
         .stack     256                ;reserve 256 bytes for the stack
;---------------------------------------
data segment ;
    string db ' ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ.$'
    BUF DB  82 DUP(?)
data ends
code segment ;
assume cs:code,ds:data
start:
    MOV BX,OFFSET BUF     ;BX point to the BUF
    mov ax,data ;         ;set the data
    mov ds,ax ;           ; set the data
    mov dx,offset string  ; move string
    MOV AH,01H            ; read the input
    CMP AL,'.'            ; it is a .
    JE  over              ;go to the over
    mov ah,9              ; get the address of string
    int 21h
    mov ah,4ch            ; show the string
    int 21h
over:   MOV AH,4CH        ; func is over
        INT 21H           ; func is over

code ends
end start
CODES ENDS
    END START
